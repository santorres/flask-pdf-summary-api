{
    "filename": "makers.pdf",
    "summaries": [
        "The bootcamp curriculum is divided into two phases: Foundations and Specialist. Each phase lasts for 8 weeks. The specific topics covered include Software Development, Cloud Engineering, Quality Engineering, and Data Engineering. The schedule may vary for individual learners, but the overall immersive time remains the same. The bootcamp can be delivered remotely or in a hybrid format, with in-person weeks scheduled for certain topics. The final project for the Software Development Specialist Track requires in-person attendance. The curriculum includes modules on Modern Software Engineering Foundation, with topics such as Python, engineering practices, database-backed web applications, and cloud deployment. The curriculum is designed to provide hands-on learning experiences with workshops, exercises, and projects.",
        "The document discusses various networking concepts related to computer work on the Internet, including deploying containers to the cloud using CI-CD and building a database-backed web application. It also explains the use of agile processes in software development and the importance of good teamwork. Additionally, it mentions different specialist tracks for apprenticeships, such as software development, cloud engineering, quality engineering, and data engineering. The document then moves on to the curriculum for software development, focusing on learning JavaScript and building web applications. It also highlights the importance of agile processes in project development. Lastly, it briefly mentions the curriculum for mobile applications, including building mobile applications connected to a web-based backend.",
        "The document outlines a curriculum for a Cloud Engineering module. It starts with learners building a native mobile application connected to their web backend, using agile processes and test-driven development. The module then progresses to teaching learners about containers, CI/CD, serverless architecture, and deploying applications to AWS. They also learn about Infrastructure as Code and orchestration using Kubernetes. The curriculum includes workshops and coaching support throughout. In the final weeks, learners focus on securing cloud applications and resolving reliability issues in live applications.",
        "This document outlines a curriculum for two modules: Quality Engineering and Data Engineering. The Quality Engineering module covers topics such as Java programming, testing, automation, and performance analysis. The Data Engineering module focuses on data analysis, visualization, and SQL database processing. The curriculum includes workshops, exercises, and projects to facilitate learning. Coaches are available to provide support, and there is a graduation celebration at the end of each module.",
        "The document outlines a curriculum for a data engineering module. It includes various topics such as database design, SQL for data analysis, data extraction and transformation, batch processing, data warehousing, stream processing, and a final project. The curriculum also emphasizes structured challenges, ad-hoc sessions, and coach availability for support and unblocking. The module aims to provide learners with the skills to leverage data engineering for organizational benefit."
    ],
    "notes": [
        "- The bootcamp curriculum is divided into two phases: Phase 1 (8 weeks) and Phase 2 (8 weeks)\n- Phase 1 covers Foundations, Software Development, Cloud Engineering, Quality Engineering, and Data Engineering\n- Timings for each week may vary for individual learners, but overall immersive time remains the same\n- Remote and on-site options are available for studying\n- Hybrid working style is an option where learners are in-person for certain weeks and have co-working weeks for collaboration\n- For the Software Development Specialist Track, in-person attendance is required for the final project\n- Phase 2 for other Specialist Tracks is delivered fully remote\n- Phase One of the curriculum includes modules on Modern Software Engineering Foundation, Engineering Practices, Database-backed Web Applications, and Cloud Deployment\n- Each module has specific objectives and approaches for learning, with a combination of independent work, pair programming, exercises, projects, and assessments\n- Emotional intelligence and wellbeing workshops are offered throughout the programme.",
        "- The document discusses different networking concepts for computers running on the Internet.\n- Learners can build and run a container running a simple database-backed web application.\n- Continuous integration and CI-CD are used in software teams for deploying containers to the cloud.\n- There is a kickoff workshop on teamwork and agile processes in software development.\n- Learners are grouped into teams and given a specification to build an Airbnb-style website together.\n- Coaches take a more hands-off approach to experience the pains of not applying good teamwork processes.\n- Daily stand-ups and mini retrospectives are organized by the team.\n- After the cohort retrospective, learners progress onto one of four specialist tracks: Software Development, Cloud Engineering, Quality Engineering, or Data Engineering.\n- The curriculum for each track may vary slightly but covers the same core learning.\n- The Software Development module focuses on learning JavaScript and writing programs in the tailored language.\n- Learners work through exercises and projects with coach-led interventions and pair programming.\n- The Web Applications module focuses on using JavaScript to build frontend web applications.\n- Learners work on a project to build a web application, supported by coach-led interventions.\n- The Engineering Project 2 module involves operating as an agile team to develop a project using a new language and stack.\n- Coaches act as product owners and make changes to simulate real-world requirements.\n- The Mobile Applications module focuses on building straightforward mobile applications connected to a web-based backend.",
        "- The document is about a curriculum for a Cloud Engineering module.\n- There are different weeks and objectives for each week.\n- In the Final Project Weeks, learners take an application they built the previous week and build a native mobile application connected to their web backend.\n- Workshops are conducted throughout the curriculum to guide learners in developing their applications and to address learning obstacles.\n- Learners are grouped into teams and given the freedom to ideate a project to implement using agile processes and test-driven development.\n- Coaches are available to help learners address learning obstacles.\n- The Final Project presentations take place on the final Friday afternoon.\n- In Week 1, learners containerize an application and deploy it to AWS.\n- There are sessions and workshops for Introduction to Containers and Retrospective sessions.\n- In Week 2, learners are introduced to CI/CD and Serverless and they deploy a static website that works with a Serverless architecture to AWS using Git-based CI/CD.\n- In Week 3, learners deploy a full-stack application to AWS and resolve development to deployment issues.\n- In Week 4, learners deploy a full-stack application using Infrastructure as Code (IaC) tools.\n- In Week 5, learners create and deploy an application composed of containers using orchestration tools like Kubernetes.\n- In Week 6, learners are introduced to Threat Modelling workshop and identify potential security issues within a cloud deployment and take appropriate corrective actions.\n- In Weeks 7 and 8, learners debug, resolve, and prevent common site reliability issues in a live application.\n- There are on-demand workshops available as needed to support learners.",
        "- The document is about a curriculum phase two that includes a Quality Engineering Module and a Data Engineering Module\n- The Quality Engineering Module covers topics such as Java programming, testing methods, manual and automated testing, data-driven testing, static analysis, performance testing, security testing, and software development lifecycle.\n- The module includes workshops, exercises, projects, and coaching support.\n- The Data Engineering Module covers topics such as data analysis, data transformation, data visualization, statistical analysis, and SQL.\n- The module includes a data analysis project, challenges, sessions on data analysis topics, the use of Python data analysis libraries, coaching support, and a metrics dashboard project.\n- There is a graduation celebration at the end of both modules.",
        "- The document outlines a curriculum for a Data Engineering module.\n- The module is divided into different weeks, each focusing on a specific topic.\n- Week 4 focuses on Analytical Databases and includes a project where learners extract, transform, and load data from various sources into an analytical database.\n- Week 5 focuses on Batch Processing and includes a project where learners develop scheduled batch-processing pipelines on live Cloud data.\n- Week 6 focuses on Data Warehousing and includes a project where learners design and build data models in a Cloud data warehouse.\n- Week 7 focuses on Stream Processing and includes a project where learners develop a stream-processing pipeline for near real-time insights.\n- Week 8 is the Final Project week, where learners apply their skills to a realistic simulated data engineering challenge.\n- Throughout the module, there are structured challenges, ad-hoc sessions, and coach availability for support and unblocking.\n- Each week includes a retrospective to reflect on the learning and progress.\n- The module concludes with an end-of-programme celebration with invited colleagues."
    ],
    "notes_summaries": [
        "Step 1: Determine the duration of the bootcamp. The bootcamp is divided into two phases, each lasting 8 weeks. Phase 1 is called Foundations, and Phase 2 is called Specialist. The overall immersive time is the same for both phases.\n\nStep 2: Understand the different tracks available. The bootcamp offers several specialist tracks, including Software Development, Cloud Engineering, Quality Engineering, and Data Engineering. The curriculum for each track is tailored to the specific focus area.\n\nStep 3: Decide on the learning format. If you are studying for an apprenticeship, the bootcamp will be delivered remotely. Otherwise, you can choose between studying fully remote or in a hybrid working style.\n\nStep 4: If you select the hybrid working style, you will need to attend in-person for certain weeks. These weeks include: Weeks 1-2 (fundamentals), Weeks 3-4 (core practices), and Weeks 5-6 (web and databases). During these in-person weeks, there will be onsite coaching, workshops, and events. However, coaches may also be available remotely, and some activities may still take place remotely.\n\nStep 5: For the Software Development Specialist Track, you will also need to attend in-person for the final project, which takes place in Weeks 7-8 of Phase 2 (weeks 15-16 overall). For all other Specialist Tracks, Phase 2 will be delivered fully remote.\n\nStep 6: Phase One: Modern Software Engineering Foundation. This phase covers various modules and their objectives. The modules include Foundations, Practices, Database-backed Web Applications, and Cloud Deployment.\n\nStep 7: Foundations module (Weeks 1-2): This module focuses on introducing learners to programming concepts and tools. Topics covered include file manipulation, command line usage, Git version control, and programming drills. There will also be workshops on emotional intelligence and wellbeing.\n\nStep 8: Practices module (Weeks 3-4): This module teaches the four key engineering practices, including test-driven development, program design, debugging, and pair programming. Learners will work independently in the morning and pair in the afternoons. There will be exercises, projects, demonstrations, and assessments to train and evaluate these practices.\n\nStep 9: Database-backed Web Applications module (Weeks 5-6): This module covers designing and building multi-table databases, using SQL to query databases, and integrating a relational database into a web application. Learners will work on exercises and projects to apply these concepts, supported by demonstrations and assessments.\n\nStep 10: Cloud Deployment module (Week 7): This module focuses on explaining how code is deployed and runs on a cloud platform. Learners will work through a series of exercises to understand the deployment process.\n\nNote: The text provided is incomplete, and some information may be missing. The summary above is based on the available information.",
        "Step 1: Kickoff workshop on teamwork and agile processes in software development.\nStep 2: Learners are grouped into teams and given a specification for an Airbnb-style website to build together in a week. They are also given a starter codebase in a tailored language with a popular web framework.\nStep 3: Use agile processes to build an application to the specification. Coaches take a more hands-off approach to let learners experience the importance of good teamwork processes.\nStep 4: Have daily stand-ups and mini retrospectives organized by the team.\nStep 5: Have a cohort retrospective to reflect on the overall experience.\nStep 6: Progress onto one of four specialist tracks: Software Development, Cloud Engineering, Quality Engineering, or Data Engineering, depending on the apprenticeship.\nStep 7: In the Software Development module, learn JavaScript fundamentals by attending daily stand-up meetings and a kickoff workshop. Work through exercises and projects designed to train in JavaScript, supported by coach-led interventions. Pair programming in the afternoon. Have a retrospective at the end of the week.\nStep 8: In the Web Applications module, use JavaScript to build frontend web applications. Attend daily stand-up meetings and a kickoff workshop. Work on a project to build a web application, supported by coach-led interventions. Learn DOM functions, add event listeners, and send HTTP API requests. Pair programming in the afternoon. Have a retrospective at the end of the week.\nStep 9: In Engineering Weeks 3 & 4, operate as an agile team to develop a project in a new language and stack. Attend a kickoff workshop on agile processes. Work in teams with a starter codebase and a board of tickets to implement over two weeks. Coaches act as product owners and simulate changes in requirements. Pay attention to teamworking difficulties and propose solutions. Have team retrospectives.\nStep 10: Progress onto the Mobile Applications module. Attend a kickoff workshop on mobile applications.\nStep 11: Build straightforward mobile applications connected to a web-based backend.",
        "Step 1: Kickoff workshop\n- Learners are grouped into teams and given the freedom to ideate a project to implement.\n- Coaches are available to help address learning obstacles.\n\nStep 2: Cloud Engineering Module - Containers (Week 1)\n- Attend the course outline session.\n- Participate in the welcome to DevOps workshop.\n- Learn about containers in the introduction to containers workshop.\n- Deploy your first containerized app to a cloud service through a series of exercises.\n- Reflect on your progress in the retrospective session.\n\nStep 3: Cloud Engineering Module - CI/CD & Serverless (Week 2)\n- Attend the introduction to CI/CD workshop.\n- Learn about serverless architecture in the serverless workshop.\n- Build a Git to Serverless deployment pipeline for a static website using AWS and Git-based CI/CD.\n- Reflect on your progress in the retrospective session.\n\nStep 4: Cloud Engineering Module - Main Cloud Provider (Week 3)\n- Kickoff your project to deploy a full-stack application to AWS.\n- Participate in the AWS IAM workshop.\n- Resolve any development to deployment issues encountered during the week-long project.\n- Reflect on your progress in the retrospective session.\n\nStep 5: Cloud Engineering Module - Infrastructure as Code (Week 4)\n- Kickoff your project to deploy a full-stack application using Infrastructure as Code (IaC) tools.\n- Learn about IaC in the IaC workshop.\n- Explore configuration management in the Configuration Management workshop.\n- Deploy the previously built application using IaC tools.\n- Reflect on your progress in the retrospective session.\n\nStep 6: Cloud Engineering Module - Orchestration (Week 5)\n- Attend the introduction to Orchestration using Kubernetes workshop.\n- Kickoff your project to create and deploy an application composed of containers using orchestration tools.\n- Deploy the previously built application using Kubernetes and previously used tools.\n- Reflect on your progress in the retrospective session.\n\nStep 7: Cloud Engineering Module - Securing Cloud Applications (Week 6)\n- Participate in the introduction to Threat Modelling workshop.\n- Engage in a series of exercises to identify potential security issues within a cloud deployment and apply appropriate corrective actions.\n- Attend two coach breakdown sessions to discuss completed exercises and evaluate proposed solutions.\n- Reflect on your progress in the retrospective session.\n\nStep 8: SRE Issues (Weeks 7 & 8)\n- Kickoff your project to debug, resolve, and prevent common site reliability issues in a live application.\n- Attend on-demand workshops as needed to address specific issues.\n- Reflect on your progress in the retrospective session.\n\nStep 9: Final Project Weeks\n- Learners take the application they built the previous week and develop a straightforward native mobile application connected to their web backend.\n- Participate in workshops throughout to discuss and refine the application.\n- Prepare for the final project presentations on the final Friday afternoon.",
        "Step 1: Curriculum Phase Two - Quality Engineering Module\n\n- Introduction to Java and the IntelliJ IDE.\n- Build basic programming skills in Java through short exercises and video demonstrations.\n- Apply exploratory testing to software projects of varying complexity.\n- Report quality and communicate effectively.\n- Automate test plans and generate evidence and reports.\n\nStep 2: Curriculum Phase Two - Quality Engineering Module (Continued)\n\n- Learn data-driven testing, static analysis, performance testing, and security testing techniques.\n- Employ these techniques in exercises and projects.\n- Use static analysis tools to discover defects and risks.\n- Discover performance and security defects and risks.\n- Understand the software development lifecycle and agile approaches.\n- Gain experience working in an engineering team and collaborate effectively.\n- Use test automation and collaboration skills to ensure quality software delivery.\n- Attend workshops on Continuous Integration and Communication.\n- Celebrate graduation.\n\nStep 3: Curriculum Phase Two - Data Engineering Module\n\n- Kickoff a data analysis project.\n- Analyze and generate insights from related datasets.\n- Use Python data analysis libraries such as Jupyter, Pandas, and matplotlib.\n- Communicate insights about well-prepared data sources.\n- Apply data analysis to an application and build a metrics dashboard using SQL.\n- Process and analyze data from multiple sources.\n- Seek coach availability for support and unblocking.\n- Reflect on the module through a retrospective.\n\nNote: This summary provides a step-by-step guide based on the information provided in the text. However, some details may be missing or incomplete, so it's important to refer to the original document for a comprehensive understanding of the topic.",
        "Step 1: Analytical Week 4\n- Learners will have a kickoff on Analytical Databases.\n- They will extract, transform, and load data from various sources into an analytical database and connect it to a BI tool for visualization.\n- Structured challenges and ad-hoc sessions on database design, SQL for data analysis, and dashboard and metric design will be provided.\n- Coaches will be available for support and unblocking.\n- A retrospective will be conducted.\n\nStep 2: Batch Week 5\n- Learners will have a kickoff on Batch Processing.\n- They will batch-process cloud data and develop scheduled batch-processing pipelines using Orchestrate and monitor Airflow.\n- Structured challenges and ad-hoc sessions on reproducibility and idempotence will be provided.\n- Coaches will be available for support and unblocking.\n- A retrospective will be conducted.\n\nStep 3: Data Week 6\n- Learners will have a kickoff on Data Warehousing.\n- They will design and build data warehouse models that meet business intelligence needs and tooling.\n- They will transform raw data stored in a Cloud data warehouse into usable data models.\n- Structured challenges and ad-hoc sessions on data warehouse modeling, access control, and data quality testing will be provided.\n- Coaches will be available for support and unblocking.\n- A retrospective will be conducted.\n\nStep 4: Stream Week 7\n- Learners will have a kickoff on Stream Processing.\n- They will stream-process data and develop a stream-processing pipeline that delivers near real-time insights.\n- Structured challenges and ad-hoc sessions on Kafka and writing data transformations using a stream processing framework like Apache Spark will be provided.\n- Coaches will be available for support and unblocking.\n- A retrospective will be conducted.\n\nStep 5: Final Project Week 8\n- Learners will have a project kickoff.\n- They will leverage data engineering skills for the benefit of an organization by applying the skills learned to a realistic simulated data engineering challenge.\n- Coaches will be available for support and unblocking.\n- An end-of-program celebration with invited colleagues will be conducted."
    ],
    "essential_info": [
        "- The bootcamp is divided into two phases, each lasting 8 weeks: Foundations and Specialist.\n- Specialist tracks include Software Development, Cloud Engineering, Quality Engineering, and Data Engineering.\n- Learning format options include apprenticeship, fully remote, or hybrid working style.\n- In-person attendance is required for certain weeks in the hybrid working style, including Weeks 1-2, 3-4, and 5-6.\n- Software Development Specialist Track requires in-person attendance for the final project in Weeks 7-8 of Phase 2.\n- Phase One covers modules on Foundations, Practices, Database-backed Web Applications, and Cloud Deployment.\n- The Foundations module focuses on programming concepts and tools.\n- The Practices module teaches key engineering practices.\n- The Database-backed Web Applications module covers designing and building multi-table databases.\n- The Cloud Deployment module focuses on explaining code deployment on a cloud platform.",
        "This text describes a software development apprenticeship program that focuses on teamwork and agile processes. Learners work in teams to build an Airbnb-style website using a specified language and framework. They follow agile processes, with daily stand-ups and retrospectives. The program includes modules on JavaScript fundamentals, web applications, and mobile applications. Learners also work on projects in different languages and stacks, with coaches acting as product owners.",
        "Step 1: Kickoff workshop\n- Learners form teams and ideate a project.\n- Coaches available for assistance.\n\nStep 2: Cloud Engineering Module - Containers (Week 1)\n- Attend course outline session.\n- Participate in welcome to DevOps workshop.\n- Learn about containers in introduction workshop.\n- Deploy first containerized app to cloud service.\n- Reflect on progress in retrospective session.\n\nStep 3: Cloud Engineering Module - CI/CD & Serverless (Week 2)\n- Attend CI/CD workshop.\n- Learn about serverless architecture.\n- Build Git to Serverless deployment pipeline for static website.\n- Reflect on progress in retrospective session.\n\nStep 4: Cloud Engineering Module - Main Cloud Provider (Week 3)\n- Kickoff project to deploy full-stack application to AWS.\n- Participate in AWS IAM workshop.\n- Resolve development to deployment issues.\n- Reflect on progress in retrospective session.\n\nStep 5: Cloud Engineering Module - Infrastructure as Code (Week 4)\n- Kickoff project to deploy full-stack application using Infrastructure as Code (IaC) tools.\n- Learn about IaC.\n- Explore configuration management.\n- Deploy previously built application using IaC tools.\n- Reflect on progress in retrospective session.\n\nStep 6: Cloud Engineering Module - Orchestration (Week 5)\n- Attend introduction to Orchestration using Kubernetes workshop.\n- Kickoff project to create and deploy application using orchestration tools.\n- Deploy previously built application using Kubernetes.\n- Reflect on progress in retrospective session.\n\nStep 7: Cloud Engineering Module - Securing Cloud Applications (Week 6)\n- Participate in introduction to Threat Modelling workshop.\n- Identify and address potential security issues in cloud deployment.\n- Attend coach breakdown sessions.\n- Reflect on progress in retrospective session.\n\nStep 8: SRE Issues (Weeks 7 & 8)\n- Kickoff project to debug, resolve, and prevent common site reliability issues.\n- Attend on-demand workshops.\n- Reflect on progress in retrospective session.\n\nStep 9: Final Project Weeks\n- Develop native mobile application connected to web backend.\n- Participate in workshops to refine application.\n- Prepare for final project presentations.",
        "Step 1: Curriculum Phase Two - Quality Engineering Module\n- Introduction to Java and IntelliJ IDE.\n- Build basic programming skills in Java.\n- Apply exploratory testing to software projects.\n- Report quality and communicate effectively.\n- Automate test plans and generate evidence and reports.\n\nStep 2: Curriculum Phase Two - Quality Engineering Module (Continued)\n- Learn data-driven, static analysis, performance, and security testing techniques.\n- Employ these techniques in exercises and projects.\n- Use static analysis tools to discover defects and risks.\n- Understand the software development lifecycle and agile approaches.\n- Gain experience working in an engineering team and collaborate effectively.\n- Use test automation and collaboration skills for quality software delivery.\n- Attend workshops on Continuous Integration and Communication.\n- Celebrate graduation.\n\nStep 3: Curriculum Phase Two - Data Engineering Module\n- Kickoff a data analysis project.\n- Analyze and generate insights from datasets.\n- Use Python data analysis libraries such as Jupyter, Pandas, and matplotlib.\n- Communicate insights about well-prepared data sources.\n- Apply data analysis to an application and build a metrics dashboard using SQL.\n- Process and analyze data from multiple sources.\n- Seek coach availability for support and unblocking.\n- Reflect on the module through a retrospective.",
        "- Analytical Week 4: Learners will work on analytical databases, extracting, transforming, and loading data for visualization. They will also learn about database design, SQL, and dashboard and metric design.\n\n- Batch Week 5: Learners will focus on batch processing, developing pipelines using Orchestrate and Airflow. They will learn about reproducibility and idempotence.\n\n- Data Week 6: Learners will learn about data warehousing, designing and building data warehouse models. They will transform raw data into usable data models and learn about data warehouse modeling, access control, and data quality testing.\n\n- Stream Week 7: Learners will work on stream processing, developing a pipeline for near real-time insights. They will learn about Kafka and stream processing using Apache Spark.\n\n- Final Project Week 8: Learners will apply their data engineering skills to a realistic challenge for an organization. Coaches will provide support, and there will be an end-of-program celebration."
    ]
}